 for i in btn2txt[1][1]:
        if(message.text == i):
            x = datetime.now().date()
            maxim = datetime.now().date().replace(day=1)
            print(x.day)
            print(x.month)
            print(x.year)

            if(x.day > 1):
                if(x.month < 12):
                    print(str(maxim) + "1")
                    maxim = datetime.now().date().replace(month=x.month + 1)
                    print(maxim)
                else:
                    print(str(maxim) + "2")
                    maxim = datetime.now().date().replace(year=x.year + 1)
                    print(maxim)
            else:
                print("x <= 1")
            calendar, step = WMonthTelegramCalendar(
                max_date=maxim, min_date=x).build()
            bot.send_message(message.chat.id,
                             f"Select {LSTEP[step]}",
                             reply_markup=calendar)
    for i in btn5txt[1]:
        if(message.text == i):
            x = datetime.now().date()
            maxim = datetime.now().date().replace(day=1)
            print(x.day)
            print(x.month)
            print(x.year)

            if(x.day > 1):
                if(x.month < 12):
                    print(str(maxim) + "1")
                    maxim = datetime.now().date().replace(month=x.month + 1)
                    print(maxim)
                else:
                    print(str(maxim) + "2")
                    maxim = datetime.now().date().replace(year=x.year + 1)
                    print(maxim)
            else:
                print("x <= 1")
            calendar, step = WMonthTelegramCalendar(
                max_date=maxim, min_date=x).build()
            bot.send_message(message.chat.id,
                             f"Select {LSTEP[step]}",
                             reply_markup=calendar)
    for i in btn3txt[1]:
        if(message.text == i):
            x = datetime.now().date()
            maxim = datetime.now().date().replace(day=1)
            print(x.day)
            print(x.month)
            print(x.year)

            if(x.day > 1):
                if(x.month < 12):
                    print(str(maxim) + "1")
                    maxim = datetime.now().date().replace(month=x.month + 1)
                    print(maxim)
                else:
                    print(str(maxim) + "2")
                    maxim = datetime.now().date().replace(year=x.year + 1)
                    print(maxim)
            else:
                print("x <= 1")
            calendar, step = WMonthTelegramCalendar(
                max_date=maxim, min_date=x).build()
            bot.send_message(message.chat.id,
                             f"Select {LSTEP[step]}",
                             reply_markup=calendar)


                              statuss = ['creator', 'administrator', 'member']

    user_status = str(bot.get_chat_member(
        chat_id=message.chat.id, user_id=message.from_user.id).status)
    if user_status in statuss:
        bot.send_message(message.chat.id, 'Начнем!')
    else:
        bot.send_message(
            message.chat.id, 'Подпишитесь на канал @pomogaikachannel ')


userid = message.from_user.id
    print(userid)  # 852191502
    chatId = "@korallaBlya"
    result = bot.get_chat_member(chatId, message.from_user.id)
    print(result)


elif(message.text == "buy"):
        bot.send_message(message.chat.id,
                         "Real cards won't work with me, no money will be debited from your account."
                         " Use this test card number to pay for your Time Machine: `4242 4242 4242 4242`"
                         "\n\nThis is your demo invoice:", parse_mode='Markdown')
        bot.send_invoice(
            message.chat.id,  # chat_id
            'Working Time Machine',  # title
            ' Want to visit your great-great-great-grandparents? Make a fortune at the races? Shake hands with Hammurabi and take a stroll in the Hanging Gardens? Order our Working Time Machine today!',  # description
            'HAPPY FRIDAYS COUPON',  # invoice_payload
            provider_token,  # provider_token
            'rub',  # currency
            prices,  # prices
            photo_url='http://erkelzaar.tsudao.com/models/perrotta/TIME_MACHINE.jpg',
            photo_height=512,  # !=0/None or picture won't be shown
            photo_width=512,
            photo_size=512,
            is_flexible=False,  # True If you need to set up Shipping Fee
            start_parameter='time-machine-example')












# for illo in month:
                    #     mn += 1
                    #     print(calendar["inline_keyboard"]
                    #           [6][1]["text"].split(" ")[0])
                    #     print(mn)
                    #     print(illo)
                    # if vla == calendar["inline_keyboard"][6][1]["text"].split(" ")[0]:
                    # break
                     # print(mains)
                    # for val in eval(calendar).items():
                    #     print(str(val))
                    #     for value in val:
                    #         print(value)
                    # data = json.dumps(calendar)
                    # cal = types.InlineKeyboardButton(
                        # text="TEXT", callback_data="33")
                    # calendar.add(cal)
                    # data = json.loads(calendar)
                    # print(json.dumps(calendar, sort_keys=True, indent=4))
                    # print(data)
                    # print(data["inline_keyboard"])
